8.3
a. FTRL allows different coefficients to have different learning rates. So despite starting with the same learning rate, I'd assume that FTRL modifies the learning rate differently for various coefficients as the training progresses.
b. Bucketing/binning functionally turns linear variables into discrete variables. This means that we can relate linear variables which don't actually have a linear relationship with our target to our target. For instance, it would be silly to think that latitude has a linear relationship with median house price; but houses in the 38th parallel might have a higher median house price, since that's San Francisco. Bucketing allows each bin to have a distinct weight.
c.

Task 1:

  bucketized_latitude = tf.feature_column.bucketized_column(
    latitude, boundaries=get_quantile_based_boundaries(
      training_examples["latitude"], 10))
  bucketized_housing_median_age = tf.feature_column.bucketized_column(
    housing_median_age, boundaries=get_quantile_based_boundaries(
      training_examples["housing_median_age"], 7))
  bucketized_median_income = tf.feature_column.bucketized_column(
    median_income, boundaries=get_quantile_based_boundaries(
      training_examples["median_income"], 7))
  bucketized_rooms_per_person = tf.feature_column.bucketized_column(
    rooms_per_person, boundaries=get_quantile_based_boundaries(
      training_examples["rooms_per_person"], 7))

_ = train_model(
    learning_rate=2.0,
    steps=1000,
    batch_size=100,
    feature_columns=construct_feature_columns(),
    training_examples=training_examples,
    training_targets=training_targets,
    validation_examples=validation_examples,
    validation_targets=validation_targets)

RMSE (on training data):
  period 09 : 69.05

I don't think bucketing median_income made much sense to me. I could definitely see there being a linear relationship between the median income and the median house price. Otherwise, the buckets seemed reasonable.

Task 2:

long_x_lat = tf.feature_column.crossed_column(keys=set([bucketized_longitude, bucketized_latitude]), hash_bucket_size=1000)

_ = train_model(
    learning_rate=1.0,
    steps=500,
    batch_size=100,
    feature_columns=construct_feature_columns(),
    training_examples=training_examples,
    training_targets=training_targets,
    validation_examples=validation_examples,
    validation_targets=validation_targets)

RMSE (on training data):
  period 09 : 63.12

I think a feature cross using households and rooms_per_person could be useful, as those features together might indicate essentially how crowded an area is overall and that could help predict median housing price.
